// <auto-generated />
using System;
using MedicalEquipmentMarket.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MedicalEquipmentMarket.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231217221509_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyEquipment", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.HasKey("CompanyId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("CompanyEquipments");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            EquipmentId = 2
                        },
                        new
                        {
                            CompanyId = 1,
                            EquipmentId = 3
                        },
                        new
                        {
                            CompanyId = 1,
                            EquipmentId = 1
                        },
                        new
                        {
                            CompanyId = 2,
                            EquipmentId = 1
                        },
                        new
                        {
                            CompanyId = 3,
                            EquipmentId = 3
                        });
                });

            modelBuilder.Entity("MedicalEquipmentMarket.Model.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Address = "Beogradska 26",
                            City = "Beograd",
                            Name = "Beomed",
                            PhoneNumber = "021731524"
                        },
                        new
                        {
                            CompanyId = 2,
                            Address = "Bulevar Mihajla Pupina 25",
                            City = "Novi Sad",
                            Name = "Health&Care",
                            PhoneNumber = "021731522"
                        },
                        new
                        {
                            CompanyId = 3,
                            Address = "Futoski put 12",
                            City = "Novi Sad",
                            Name = "Galenika",
                            PhoneNumber = "021731511"
                        });
                });

            modelBuilder.Entity("MedicalEquipmentMarket.Model.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            EquipmentId = 1,
                            Description = "Aparat za osluskivanja rada pluca i srca",
                            Name = "Stetoskop",
                            Price = 20000.0
                        },
                        new
                        {
                            EquipmentId = 2,
                            Description = "Namestaj za pacijente",
                            Name = "Krevet",
                            Price = 14000.0
                        },
                        new
                        {
                            EquipmentId = 3,
                            Description = "Oprema za previjanje",
                            Name = "Pakovanje zavoja",
                            Price = 1200.0
                        });
                });

            modelBuilder.Entity("MedicalEquipmentMarket.Model.PickupSchedule", b =>
                {
                    b.Property<int>("IdS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdS"));

                    b.Property<DateTime>("ScheduleTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdS");

                    b.ToTable("PickupSchedule");

                    b.HasData(
                        new
                        {
                            IdS = 1,
                            ScheduleTime = new DateTime(2023, 12, 17, 22, 15, 9, 483, DateTimeKind.Utc).AddTicks(6321),
                            Status = "zakazan"
                        });
                });

            modelBuilder.Entity("MedicalEquipmentMarket.Model.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("BuyerAccountId")
                        .HasColumnType("integer");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ReservationId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            BuyerAccountId = 2,
                            CompanyId = 1,
                            ReservationTime = new DateTime(2023, 12, 17, 22, 15, 9, 483, DateTimeKind.Utc).AddTicks(6291)
                        },
                        new
                        {
                            ReservationId = 2,
                            BuyerAccountId = 1,
                            CompanyId = 1,
                            ReservationTime = new DateTime(2023, 12, 17, 22, 15, 9, 483, DateTimeKind.Utc).AddTicks(6293)
                        },
                        new
                        {
                            ReservationId = 3,
                            BuyerAccountId = 3,
                            CompanyId = 2,
                            ReservationTime = new DateTime(2023, 12, 17, 22, 15, 9, 483, DateTimeKind.Utc).AddTicks(6294)
                        });
                });

            modelBuilder.Entity("MedicalEquipmentMarket.Model.SalesReport", b =>
                {
                    b.Property<int>("IdSales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSales"));

                    b.Property<int>("CompanId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("IdSales");

                    b.ToTable("SalesReport");

                    b.HasData(
                        new
                        {
                            IdSales = 1,
                            CompanId = 1,
                            EquipId = 0,
                            ReportDate = new DateTime(2023, 12, 17, 22, 15, 9, 483, DateTimeKind.Utc).AddTicks(6245)
                        });
                });

            modelBuilder.Entity("CompanyEquipment", b =>
                {
                    b.HasOne("MedicalEquipmentMarket.Model.Company", "Company")
                        .WithMany("CompanyEquipments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalEquipmentMarket.Model.Equipment", "Equipment")
                        .WithMany("CompanyEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("MedicalEquipmentMarket.Model.Reservation", b =>
                {
                    b.HasOne("MedicalEquipmentMarket.Model.Company", "Company")
                        .WithMany("Reservations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MedicalEquipmentMarket.Model.Company", b =>
                {
                    b.Navigation("CompanyEquipments");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("MedicalEquipmentMarket.Model.Equipment", b =>
                {
                    b.Navigation("CompanyEquipments");
                });
#pragma warning restore 612, 618
        }
    }
}
